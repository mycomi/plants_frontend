{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mycom\\\\Desktop\\\\405\\\\Project\\\\frontend\\\\components\\\\main\\\\Myplants.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nfunction Myplants(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var currentUser = props.currentUser,\n      posts = props.posts;\n\n  var onLogout = function onLogout() {\n    firebase.auth().signOut();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, currentUser.name), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, currentUser.email), React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return onLogout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \"Plant Name: \", item.plantName));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Myplants);","map":{"version":3,"sources":["C:/Users/mycom/Desktop/405/Project/frontend/components/main/Myplants.js"],"names":["React","useState","useEffect","connect","firebase","require","Myplants","props","userPosts","setUserPosts","user","setUser","currentUser","posts","onLogout","auth","signOut","styles","container","containerInfo","name","email","containerGallery","item","containerImage","image","uri","downloadURL","plantName","StyleSheet","create","flex","margin","aspectRatio","mapStateToProps","store","userState"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,kBAAkCN,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwBR,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AAGA,MAAQC,WAAR,GAA+BL,KAA/B,CAAQK,WAAR;AAAA,MAAqBC,KAArB,GAA+BN,KAA/B,CAAqBM,KAArB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBV,IAAAA,QAAQ,CAACW,IAAT,GAAgBC,OAAhB;AACH,GAFD;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,WAAW,CAACQ,IAAnB,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,WAAW,CAACS,KAAnB,CAFJ,EAIQ,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMP,QAAQ,EAAd;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACK,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,UAAU,EAAE,CADhB;AAEI,IAAA,UAAU,EAAE,KAFhB;AAGI,IAAA,IAAI,EAAET,KAHV;AAII,IAAA,UAAU,EAAE;AAAA,UAAGU,IAAH,QAAGA,IAAH;AAAA,aACR,oBAAC,IAAD;AACI,QAAA,KAAK,EAAEN,MAAM,CAACO,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEP,MAAM,CAACQ,KADlB;AAEI,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH,IAAI,CAACI;AAAZ,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBJ,IAAI,CAACK,SAAxB,CAPJ,CADQ;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CADJ;AAmCH;;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BZ,EAAAA,aAAa,EAAE;AACXa,IAAAA,MAAM,EAAE;AADG,GAJc;AAO7BV,EAAAA,gBAAgB,EAAE;AACdS,IAAAA,IAAI,EAAE;AADQ,GAPW;AAU7BP,EAAAA,cAAc,EAAE;AACZO,IAAAA,IAAI,EAAE,IAAI;AADE,GAVa;AAc7BN,EAAAA,KAAK,EAAE;AACHM,IAAAA,IAAI,EAAE,CADH;AAEHE,IAAAA,WAAW,EAAE,IAAI;AAFd;AAdsB,CAAlB,CAAf;;AAoBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCvB,IAAAA,WAAW,EAAEuB,KAAK,CAACC,SAAN,CAAgBxB,WADG;AAEhCC,IAAAA,KAAK,EAAEsB,KAAK,CAACC,SAAN,CAAgBvB;AAFS,GAAZ;AAAA,CAAxB;;AAKA,eAAeV,OAAO,CAAC+B,eAAD,EAAkB,IAAlB,CAAP,CAA+B5B,QAA/B,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, View, Text, Image, FlatList,Button } from 'react-native'\r\n\r\nimport { connect } from 'react-redux'\r\nimport firebase from 'firebase'\r\nrequire('firebase/firestore')\r\n\r\nfunction Myplants(props) {\r\n    const [userPosts, setUserPosts] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n\r\n    \r\n    const { currentUser, posts } = props;\r\n\r\n    const onLogout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.containerInfo}>\r\n                <Text>{currentUser.name}</Text>\r\n                <Text>{currentUser.email}</Text>\r\n\r\n                    <Button\r\n                        title=\"Logout\"\r\n                        onPress={() => onLogout()}\r\n                    />\r\n            </View>\r\n            <View style={styles.containerGallery}>\r\n                <FlatList\r\n                    numColumns={3}\r\n                    horizontal={false}\r\n                    data={posts}\r\n                    renderItem={({ item }) => (\r\n                        <View\r\n                            style={styles.containerImage}>\r\n\r\n                            <Image\r\n                                style={styles.image}\r\n                                source={{ uri: item.downloadURL }}\r\n                            />\r\n                            <Text>Plant Name: {item.plantName}</Text>\r\n                        </View>\r\n\r\n                    )}\r\n                \r\n                />\r\n                     \r\n\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    containerInfo: {\r\n        margin: 20\r\n    },\r\n    containerGallery: {\r\n        flex: 1\r\n    },\r\n    containerImage: {\r\n        flex: 1 / 3\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        aspectRatio: 1 / 1\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    posts: store.userState.posts,\r\n\r\n})\r\nexport default connect(mapStateToProps, null)(Myplants);"]},"metadata":{},"sourceType":"module"}