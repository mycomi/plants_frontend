{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\mycom\\\\Desktop\\\\405\\\\Project\\\\frontend\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFriend, clearData } from \"../redux/actions/index\";\nimport HomeScreen from \"./main/Home\";\nimport MyPlantsScreen from \"./main/Myplants\";\nimport SearchScreen from \"./main/Search\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFriend();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Home\",\n        labeled: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"MyPlants\",\n        component: MyPlantsScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"MyPlants\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Scan\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref4) {\n          var navigation = _ref4.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n                size = _ref5.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFriend: fetchUserFriend,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/mycom/Desktop/405/Project/frontend/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","firebase","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFriend","clearData","HomeScreen","MyPlantsScreen","SearchScreen","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport firebase from 'firebase'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchUser, fetchUserPosts, fetchUserFriend, clearData} from '../redux/actions/index';\r\n\r\nimport HomeScreen from './main/Home'\r\nimport MyPlantsScreen from './main/Myplants'\r\nimport SearchScreen from './main/Search'\r\n\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nconst EmptyScreen = () => {\r\n    return(null)\r\n}\r\n\r\nexport class Main extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.clearData();\r\n        this.props.fetchUser();  \r\n        this.props.fetchUserPosts();  \r\n        this.props.fetchUserFriend();\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Tab.Navigator initialRouteName=\"Home\" labeled=\"false\">\r\n                \r\n                <Tab.Screen name=\"Home\" component={HomeScreen} \r\n                options={{\r\n                    tabBarIcon: ({color,size}) => (\r\n                        <MaterialCommunityIcons name=\"home\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n\r\n                \r\n\r\n                {/* \r\n                \r\n                <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\r\n                options={{\r\n                    tabBarIcon: ({color,size}) => (\r\n                        <MaterialCommunityIcons name=\"magnify\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n\r\n                */}\r\n                \r\n                <Tab.Screen name=\"MyPlants\" component={MyPlantsScreen} \r\n                listeners={({ navigation }) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"MyPlants\", {uid: firebase.auth().currentUser.uid})\r\n                    }})}\r\n                options={{\r\n                    tabBarIcon: ({color,size}) => (\r\n                        <MaterialCommunityIcons name=\"account-circle\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n                <Tab.Screen name=\"Scan\" component={EmptyScreen} \r\n                listeners={({ navigation }) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"Add\")\r\n                    }\r\n                })}\r\n                options={{\r\n                    tabBarIcon: ({color,size}) => (\r\n                        <MaterialCommunityIcons name=\"plus-box\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n            </Tab.Navigator>\r\n           /*\r\n           <View>\r\n               <Text>feed</Text>\r\n           </View>\r\n           */\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser\r\n})\r\n\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser, fetchUserPosts, fetchUserFriend, clearData}, dispatch)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main)\r\n"]},"metadata":{},"sourceType":"module"}