{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mycom\\\\Desktop\\\\405\\\\Project\\\\frontend\\\\components\\\\main\\\\Myplants.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nfunction Myplants(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friend = _useState6[0],\n      setFriend = _useState6[1];\n\n  useEffect(function () {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n    console.log({\n      currentUser: currentUser,\n      posts: posts\n    });\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n      setUserPosts(posts);\n    } else {\n      firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n        } else {\n          console.log('dose not exit');\n        }\n      });\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").orderBy(\"creation\", \"asc\").get().then(function (snapshot) {\n        var posts = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setUserPosts(posts);\n      });\n    }\n  }, [props.route.params.uid]);\n\n  var onFriend = function onFriend() {\n    firebase.firestore().collection(\"friend\").doc(firebase.auth().currentUser.uid).collection(\"userFriend\").doc(props.route.params.uid).set({});\n  };\n\n  var onUnfriend = function onUnfriend() {\n    firebase.firestore().collection(\"friend\").doc(firebase.auth().currentUser.uid).collection(\"userFriend\").doc(props.route.params.uid).delete();\n  };\n\n  var onLogout = function onLogout() {\n    firebase.auth().signOut();\n  };\n\n  if (user === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, user.name), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, user.email), props.route.params.uid !== firebase.auth().currentUser.uid ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, friend ? React.createElement(Button, {\n    title: \"Friend\",\n    onPress: function onPress() {\n      return onUnfriend();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }) : React.createElement(Button, {\n    title: \"Add Friend\",\n    onPress: function onPress() {\n      return onFriend();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  })) : null), React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: userPosts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \"Plant Name: \", item.plantName));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts,\n    friend: store.userState.friend\n  };\n};\n\nexport default connect(mapStateToProps, null)(Myplants);","map":{"version":3,"sources":["C:/Users/mycom/Desktop/405/Project/frontend/components/main/Myplants.js"],"names":["React","useState","useEffect","connect","firebase","require","Myplants","props","userPosts","setUserPosts","user","setUser","friend","setFriend","currentUser","posts","console","log","route","params","uid","auth","firestore","collection","doc","get","then","snapshot","exists","data","orderBy","docs","map","id","onFriend","set","onUnfriend","delete","onLogout","signOut","styles","container","containerInfo","name","email","containerGallery","item","containerImage","image","uri","downloadURL","plantName","StyleSheet","create","flex","margin","aspectRatio","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, View, Text, Image, FlatList,Button } from 'react-native'\r\n\r\nimport { connect } from 'react-redux'\r\nimport firebase from 'firebase'\r\nrequire('firebase/firestore')\r\n\r\nfunction Myplants(props) {\r\n    const [userPosts, setUserPosts] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [friend, setFriend] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const { currentUser, posts } = props;\r\n        console.log({ currentUser, posts })\r\n\r\n        if(props.route.params.uid === firebase.auth().currentUser.uid){\r\n            setUser(currentUser)\r\n            setUserPosts(posts)\r\n        }\r\n        else{\r\n            firebase.firestore()\r\n            .collection(\"users\")\r\n            .doc(props.route.params.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.exists){\r\n                    setUser(snapshot.data());\r\n                }\r\n                else{\r\n                    console.log('dose not exit')\r\n                }\r\n            })\r\n            firebase.firestore()\r\n            .collection(\"posts\")\r\n            .doc(props.route.params.uid)\r\n            .collection(\"userPosts\")\r\n            .orderBy(\"creation\", \"asc\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                let posts = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                })\r\n                setUserPosts(posts)\r\n            })\r\n        }\r\n    }, [props.route.params.uid])\r\n\r\n    const onFriend = () => {\r\n        firebase.firestore()\r\n        .collection(\"friend\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"userFriend\")\r\n        .doc(props.route.params.uid)\r\n        .set({})\r\n    }\r\n    const onUnfriend = () => {\r\n        firebase.firestore()\r\n        .collection(\"friend\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"userFriend\")\r\n        .doc(props.route.params.uid)\r\n        .delete()\r\n    }\r\n\r\n    const onLogout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    \r\n    if(user === null){\r\n        return <View/>\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.containerInfo}>\r\n                <Text>{user.name}</Text>\r\n                <Text>{user.email}</Text>\r\n\r\n                    {props.route.params.uid !== firebase.auth().currentUser.uid ? (\r\n                        <View>\r\n                            {friend? (\r\n                                <Button\r\n                                    title=\"Friend\"\r\n                                    onPress={() => onUnfriend()}\r\n                                />\r\n\r\n                            ) : (\r\n                                <Button\r\n                                    title=\"Add Friend\"\r\n                                    onPress={() => onFriend()}\r\n                                />\r\n                            )}\r\n                        \r\n                        </View>\r\n                    ) : null}\r\n            </View>\r\n            <View style={styles.containerGallery}>\r\n                <FlatList\r\n                    numColumns={3}\r\n                    horizontal={false}\r\n                    data={userPosts}\r\n                    renderItem={({ item }) => (\r\n                        <View\r\n                            style={styles.containerImage}>\r\n\r\n                            <Image\r\n                                style={styles.image}\r\n                                source={{ uri: item.downloadURL }}\r\n                            />\r\n                            <Text>Plant Name: {item.plantName}</Text>\r\n                        </View>\r\n\r\n                    )}\r\n                \r\n                />\r\n                     \r\n\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    containerInfo: {\r\n        margin: 20\r\n    },\r\n    containerGallery: {\r\n        flex: 1\r\n    },\r\n    containerImage: {\r\n        flex: 1 / 3\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        aspectRatio: 1 / 1\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    posts: store.userState.posts,\r\n    friend: store.userState.friend,\r\n\r\n})\r\nexport default connect(mapStateToProps, null)(Myplants);"]},"metadata":{},"sourceType":"module"}